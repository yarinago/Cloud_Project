name: Flask-Postgres application

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main", "development" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Build and run Docker Compose
        run: |
            docker-compose -f compose.yml up -d --build
            # Retrieve the shortened SHA of the latest commit
            IMAGE_TAG=$(git rev-parse --short ${{ github.sha }})
            # Exit immediately if any command exits with a non-zero status
            set -e  
            # Find the ID of the container created by docker-compose
            docker images
            docker container ls
            CONTAINER_ID=$(docker ps -qf "name=*flask_1")
            echo $CONTAINER_ID
            # Execute the unit tests inside the container
            docker exec $CONTAINER_ID python -m unittest discover tests
      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v1

      - name: Login to AWS ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Push Docker image to ECR
        run: |
          docker tag my_flask_app ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
