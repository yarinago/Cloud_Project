name: Flask-Postgres application

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main", "development" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ vars.BASE_URL }}
      DB_HOST: ${{ vars.DB_HOST }}
      DB_PORT: ${{ vars.DB_PORT }}
      DB_NAME=: ${{ vars.DB_NAME }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_TIMEOUT: ${{ vars.DB_TIMEOUT }}
      RECORDS_LIMIT: ${{ vars.RECORDS_LIMIT }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Run unit tests on the Docker Compose container
        run: |
            docker-compose up -d --build
            python -m pip install -r requirement.txt
            echo "Finish Docker Compose"
            # Wait until the PostgreSQL service is ready
            sleep 10
            docker container ls
            #docker-compose exec flask-postgres-app apt list --installed
            #docker-compose exec flask-postgres-app python3 -c "echo host='${DB_HOST}', port='${DB_PORT}', dbname='${DB_NAME}', user='${DB_USERNAME}', password='${DB_PASSWORD}'":
            # Run the unit tests
            #docker exec flask-postgres-app python3 -m unittest discover tests
        
