version: '3.8'

services:
  flask:
    build: .
    command: flask run --host 0.0.0.0 --port 5000
    volumes:
      - .:/app
    ports:
      - 5000:5000
    environment:
      - BASE_URL=${{ env.BASE_URL }}
      - DB_HOST=${{ env.DB_HOST }}
      - DB_PORT=${{ env.DB_PORT }}
      - DB_NAME=${{ env.DB_NAME }}
      - DB_USERNAME=${{ env.DB_USERNAME }}
      - DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      - DB_TIMEOUT=${{ env.DB_TIMEOUT }}
      - RECORDS_LIMIT=${{ env.RECORDS_LIMIT }}
    depends_on:
      - postgres
    labels:
      - "com.example.description=Flask API Service"
      - "com.example.role=app"
  postgres:
    restart: on-failure:3
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${{ env.DB_USERNAME }}
      - POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}
      - POSTGRES_DB=${{ env.DB_NAME }}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
      - ./postgres-init/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount the init.sql script
    ports:
      - "5432:5432"
    labels:
      - "com.example.description=PostgreSQL Database"
      - "com.example.role=db"
